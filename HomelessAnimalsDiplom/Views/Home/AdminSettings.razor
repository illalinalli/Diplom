@using static HomelessAnimalsDiplom.Controllers.HomeController;
@using static HomelessAnimalsDiplom.Models.Database;
@using HomelessAnimalsDiplom.Models;
@using HomelessAnimalsDiplom.Views.Advertisement;
@using MongoDB.Bson;
@using MongoDB.Driver;
@code {
    public Similarity similarity;  // Создание экземпляра матрицы
    public List<BreedSimilarity> breedsSimilarity;
    protected override void OnInitialized()
    {
        // Загрузка и заполнение матрицы из базы данных (если необходимо)
        // Пример:
        //breedsMatrix = new();
        breedsSimilarity = new();
        var allBreeds = Item.GetAllBreeds();
        //foreach (var b in allBreeds)
        //{
        //    BreedSimilarity breedSim = new()
        //    {
        //        AnimalBreed = b
        //    };
        //}
        breedsSimilarity = BreedSimilarity.Fill();

        //similarity = SimilarityCollection.Find(new BsonDocument()).FirstOrDefault();
        //if (similarity == null)
        //{
        //    similarity = new();
        //}
        //similarity.BreedSimilarity = LoadMatrixFromDatabase();
        //similarity.Fill();
    }

    public void Save()
    {
        try
        {
            foreach (var b in breedsSimilarity)
            {
                var filter = Builders<BreedSimilarity>.Filter.Eq("_id", b.Id);
                BreedSimilarityCollection?.ReplaceOneAsync(filter, b, ReplaceOptionsUpsert).Wait();
                
            }
            StateHasChanged();
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    private Dictionary<Breed, Dictionary<Breed, double>> LoadMatrixFromDatabase()
    {
        // Логика загрузки данных из базы данных (может быть реализована с использованием Entity Framework или другого ORM)
        // Пример заполнения матрицы нулями:

        Dictionary<Breed, Dictionary<Breed, double>> breedsMatrix = new Dictionary<Breed, Dictionary<Breed, double>>();
        List<Breed> breeds = Item.GetAllBreeds(); // Функция для получения списка пород из базы данных

        foreach (var breed1 in breeds)
        {
            breedsMatrix[breed1] = new Dictionary<Breed, double>();
            foreach (var breed2 in breeds)
            {
                breedsMatrix[breed1][breed2] = 0.0; // Заполнение матрицы нулями
            }
        }

        return breedsMatrix;
    }

    private async Task UpdateValue(Breed breed1, Breed breed2, ChangeEventArgs e)
    {
        if (e.Value == null) return;
        double value = 0.0;
        var curRes = breedsSimilarity.FirstOrDefault(x => x.AnimalBreed == breed1);
        if (curRes == null) return;
        if (Double.TryParse(e.Value.ToString().Replace(".", ","), out value))
        {
            if (value >= 0 && value <= 1)
            {
                await Task.Delay(1); // Заглушка для асинхронности
                curRes.SimilarityValues[breed2] = value;
                //similarity.BreedSimilarity[breed1][breed2] = value;
                //similarity.BreedIdSimilarity[breed1.Id][breed2.Id] = value;
            }
            else
            {
                curRes.SimilarityValues[breed2] = 0;
            }
        }
        
        //if (value >= 0 && value <= 1)
        //{
        //    await Task.Delay(1); // Заглушка для асинхронности
        //    similarity.BreedSimilarity[breed1][breed2] = value;
        //    similarity.BreedIdSimilarity[breed1.Id][breed2.Id] = value;
        //}
        //else
        //{
        //    similarity.BreedSimilarity[breed1][breed2] = 0.0;
        //}
    }
}
<div class="container-fluid">
    <h5>Матрица схожести пород</h5>
    <table class="table table-bordered">
        <tr>
            <th></th>
            @foreach (var b in breedsSimilarity)
            {
                <th style="text-align:center; font-weight: 400;">@b.AnimalBreed.Name</th>
                
            }
        </tr>
        @foreach (var kvp in breedsSimilarity)
        {
            <tr>
                <td>@kvp.AnimalBreed.Name</td>
                @foreach (var innerKvp in kvp.SimilarityValues)
                {
                    // 
                    <td class="border">
                        <input type="number" @onchange="@((e)=>UpdateValue(kvp.AnimalBreed, innerKvp.Key, e))"
                       step="0.1" min="0" max="1" class="form-control"/>
                    </td>
                }
            </tr>
        }
    </table>
    <button class="btn btn-primary" @onclick="Save">Сохранить</button>
</div>