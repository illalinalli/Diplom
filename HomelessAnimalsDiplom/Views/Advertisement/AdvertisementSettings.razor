@using static HomelessAnimalsDiplom.Controllers.HomeController;
@using static HomelessAnimalsDiplom.Models.Database;
@using HomelessAnimalsDiplom.Models;
@using MongoDB.Bson;
@using MongoDB.Driver;
@using System.IO;
@code {
    private ObjectId selectedAnimalType;
    Item item = new();
    AnimalType animalType = new();
    Breed breed = new();    
    List<Breed> breeds = new();
    List<ObjectId> properties = new();
    List<PropertyValue> colors = new();

    string? title;
    string? longText;
    List<byte[]> photos = new();

    List<AnimalType> animalTypes = AnimalTypeCollection.Find(new BsonDocument()).ToList();

    Dictionary<ObjectId, bool> checkedStates = new();

    List<PropertyValue> AllColors = new();
    List<PropertyValue> AllSexes = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        item.Id = ObjectId.GenerateNewId();
        AllColors = Item.GetAllColors();
        AllSexes = Item.GetAllSexes();
    }

    private void HandleAnimalTypeChange(ChangeEventArgs args)
    {
        if (args.Value == null) return;

        animalType.Id = ObjectId.Parse(args.Value.ToString());

        if (animalType.Id != ObjectId.Empty)
        {
            breeds = BreedCollection
             .Find(x => x.AnimalTypeRef == animalType.Id)
             .ToList();
        }
        StateHasChanged();
    }

    private void HandleAnimalBreedChange(ChangeEventArgs args)
    {
        if (args.Value == null) return;

        breed.Id = ObjectId.Parse(args.Value.ToString());

    }

    bool IsChecked(ObjectId id)
    {
        return checkedStates.ContainsKey(id) && checkedStates[id];
    }

    void HandleCheckColors(ChangeEventArgs e, PropertyValue ptVal)
    {
        if (e.Value == null) return;
        var isChecked = (bool)e.Value;

        if (isChecked)
        {
            colors.Add(ptVal);
        }
        else
        {
            colors.Remove(ptVal);
        }

        checkedStates[ptVal.Id] = isChecked;
        StateHasChanged();
    }

    void HandleCheckSex(ChangeEventArgs e, PropertyValue ptVal)
    {
        if (e.Value == null) return;

        item.Sex = ptVal;

        StateHasChanged();
    }
    void GetTitle(ChangeEventArgs e)
    {
        title = e?.Value?.ToString();
    }

    void GetLongTxt(ChangeEventArgs e)
    {
        longText = e?.Value?.ToString();
    }

    private async void GetAnimalPhotos(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            if (file.Size <= 512000) // проверяем размер файла
            {
                var data = new byte[file.Size];
                var fileName = file.Name;

                using (var memoryStream = new MemoryStream())
                {
                    using (var stream = file.OpenReadStream())
                    {
                        await stream.CopyToAsync(memoryStream);
                    }
                    data = memoryStream.ToArray();
                    photos.Add(data);
                }
            }
            else
            {
                // обработка случая, когда файл превышает максимальный размер
                // можно выбрасывать исключение, выводить сообщение об ошибке и т. д.
            }
        }
    }


    void Save()
    {
        if (CurUser == null) return;
        if (!breeds.Contains(breed))
        {
            breed.Id = breeds.OrderBy(x => x.Name).First().Id;
        }
        item.BreedRef = breed.Id;
        item.Colors = colors;
        item.IsPublished = true;
        item.UserRef = CurUser.Id;
        item.Title = title;
        item.LongDescription = longText;
        item.Images = photos;
        item.CreationDate = DateTimeOffset.Now;
       
        // создание фильтра для поиска существующей записи
        var filter = Builders<Item>.Filter.Eq("_id", item.Id);

        // выполнение операции upsert
        ItemCollection?.ReplaceOneAsync(filter, item, ReplaceOptionsUpsert);

        StateHasChanged();
    }
}
<div class="row justify-content-center pb-3">
    <div class="bordered card-create-ad">
        <div class="main-page-recom-title create-ad-title">Создать объявление</div>
        <div class="mb-3">
            <label class="label-txt">Название публикации:</label>
            <input type="text" class="form-control input-form-txt" @onchange="GetTitle">
        </div>
        <div class="mb-3">
            <label class="label-txt">Вид животного:</label>
            <select class="form-control input-form-txt" value="@animalType.Id" @onchange="HandleAnimalTypeChange">
                @foreach (var t in animalTypes.OrderBy(x => x.Name))
                {
                    <option value="@t.Id">@t.Name</option>
                }
            </select>
        </div>
        <div class="mb-3">
            <label class="label-txt">Порода животного:</label>
            <select class="form-control input-form-txt" value="@breed.Id" @onchange="HandleAnimalBreedChange">
                @if (breeds != null)
                {
                    @foreach (var b in breeds.OrderBy(x => x.Name))
                    {
                        <option value="@b.Id">@b.Name</option>
                    }
                }
            </select>
        </div>
        <div class="mb-3 btn-create-ad">
            <label class="label-txt">Пол животного:</label>
            @foreach (var s in AllSexes)
            {
                <div class="mb-1">
                    <input class="form-check-input input-form-txt" type="radio" name="radios" id="@s.Id"
                       checked="@IsChecked(s.Id)" @onchange="e => HandleCheckSex(e, s)">
                    <label class="form-check-label" for="@s.Id">@s.Name</label>
                </div>
            }
        </div>
        <div class="mb-3 btn-create-ad">
            <label class="label-txt">Окрас животного:</label>
            @foreach (var s in AllColors)
            {
                <div class="mb-1">
                    <input class="form-check-input input-form-txt" type="checkbox" name="boxes" id="@s.Id" value="@s.Name"
                       checked="@IsChecked(s.Id)" @onchange="e => HandleCheckColors(e, s)">
                    <label class="form-check-label" for="@s.Id">@s.Name</label>
                </div>
            }
        </div>
        <div class="mb-3">
            <label class="label-txt">Описание к публикации:</label>
            <textarea class="form-control input-form-txt" style="resize: none;" id="itemLongDis" rows="3" @onchange="GetLongTxt" />
        </div>
        <div class="mb-3">
            <label class="label-txt">Загрузите фотографии животного:</label>
            <InputFile class="form-control input-form-txt" type="file" id="formFileMultiple" multiple OnChange="GetAnimalPhotos" />
        </div>
        <div class="mb-3" style="padding: 20px 100px 20px 100px;">
            <a href="/Home/MainPage" class="btn btn-outline-primary save-btn-create-ad mb-2" @onclick="Save">Опубликовать</a>
        </div>
    </div>

</div>


@*<div class="container">
    <div class="row pt-3">
        <div class="col-12 ad-text">
            <h3>Создать объявление</h3>
        </div>
        <div class="col-12 ad-text">
            <div class="row mb-3">
                <label class="col-form-label col-lg-4 col-xxl-2" for="itemTitle">Название публикации:</label>
                <div class="col-lg-9">
                    <input type="text" class="form-control" id="itemTitle" @onchange="GetTitle">
                </div>
            </div>
        </div>
        <div class="col-12 ad-text">
            <div class="row mb-3">
                <label class="col-form-label col-lg-4 col-xxl-2" for="itemType">Вид животного:</label>
                <div class="col-lg-9">
                    <select id="itemType" class="form-control" value="@animalType.Id" @onchange="HandleAnimalTypeChange">
                        @foreach (var t in animalTypes.OrderBy(x => x.Name))
                        {
                            <option value="@t.Id">@t.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="col-12 ad-text">
            <div class="row mb-3">
                <label class="col-form-label col-lg-4 col-xxl-2" for="itemBreed">Порода животного:</label>
                <div class="col-lg-9">
                    <select id="itemBreed" class="form-control" value="@breed.Id" @onchange="HandleAnimalBreedChange">
                        @if (breeds != null)
                        {
                            @foreach (var b in breeds.OrderBy(x => x.Name))
                            {
                                <option value="@b.Id">@b.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="col-12 ad-text">
            <div class="row mb-3">
                <label class="col-form-label col-lg-4 col-xxl-2">Пол животного</label>
                <div class="col-lg-9 mb-2">
                    @foreach (var s in AllSexes)
                    {
                        <div class="mb-1">
                            <input class="form-check-input" type="radio" name="radios" id="@s.Id" 
                               checked="@IsChecked(s.Id)" @onchange="e => HandleCheckSex(e, s)">
                            <label class="form-check-label" for="@s.Id">@s.Name</label>
                        </div>
                    }
                </div>
                <label class="col-form-label col-lg-4 col-xxl-2">Окрас животного</label>
                <div class="col-lg-9 mb-2">
                    @foreach (var s in AllColors)
                    {
                        <div class="mb-1">
                            <input class="form-check-input" type="checkbox" name="boxes" id="@s.Id" value="@s.Name"
                               checked="@IsChecked(s.Id)" @onchange="e => HandleCheckColors(e, s)">
                            <label class="form-check-label" for="@s.Id">@s.Name</label>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="row mb-3">
                <label class="col-form-label col-lg-4 col-xxl-2" for="itemLongDis">Описание к публикации:</label>
                <div class="col-lg-9">
                    <textarea class="form-control" style="resize: none;" id="itemLongDis" rows="3" @onchange="GetLongTxt"/>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="row mb-3">
                <label class="col-form-label col-lg-4 col-xxl-2" for="formFileMultiple">Загрузите фотографии животного:</label>
                <div class="col-lg-9">
                    <InputFile class="form-control" type="file" id="formFileMultiple" multiple OnChange="GetAnimalPhotos" />
                </div>
            </div>
        </div>

        <div class="col-12">
            <a href="/Home/MainPage" class="btn btn-outline-primary mb-2" @onclick="Save">Опубликовать</a>
        </div>
    </div>
</div>*@
