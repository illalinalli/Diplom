@using HomelessAnimalsDiplom.Models;
@using HomelessAnimalsDiplom.Views.Advertisement;
@using HomelessAnimalsDiplom.Views.Shared.Components;
@using Microsoft.AspNetCore.Components.Rendering;
@using System.Globalization;
@using HomelessAnimalsDiplom.Controllers;
@using static Controllers.HomeController;
@using static HomelessAnimalsDiplom.Models.Database;
@using static HomelessAnimalsDiplom.Views.Advertisement.AdvertisementSettings;
@using MongoDB.Bson;
@using MongoDB.Driver;
@code {
    public List<Item> Items = ItemCollection.Find(new BsonDocument()).ToList();
    List<AnimalType> animalTypes = AnimalTypeCollection.Find(new BsonDocument()).ToList();
    public SearchComponent? Search;
    public static AdvertisementDetailComponent? AdvertisementDetail = new();
    public static MainPageSettings MainPage = new();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (AdvertisementDetail != null)
        {
            AdvertisementDetail.OnUpdateMainPage += Update;
        }
    }
    public void ShowDetails(Item item)
    {
        AdvertisementDetail?.ShowDialog(item, null, null);
    }
    public bool IsWatchedItem(Item item)
    {
        if (CurUser.ViewingHistory == null) return false;
        if (CurUser.ViewingHistory.FirstOrDefault(x => x.ItemId == item.Id) != null) return true;
        return false;
    }

    public void Update()
    {
        StateHasChanged();
    }
}

<SearchComponent @ref="Search" />
<div class="container-fluid">
    <div class="row mb-4">
        <div class="col" style="font-weight:600; font-size: medium;">Рекомендации для вас</div>
    </div>
    <div class="row">
        <div class="col">
            @if (CurUser != null && Items.Count != 0)
            {
                foreach (var item in Items)
                {
                    <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12 pt-3 pb-5">
                        <div class="card" style="@(IsWatchedItem(item).StrIf("opacity: 0.65;"))  width: 24rem;">
                            @if (item.Images?.Count != 0)
                            {
                                <img src="@($"data:image/jpeg;base64,{Convert.ToBase64String(item.Images.First())}")" alt="Image" class="d-block w-100 card-img">
                            }
                            @if (IsWatchedItem(item))
                            {
                                <div style="position: absolute; top: 10px; right: 10px; background-color: #3c4246a6; opacity: 1; color: white; padding: 5px; border-radius: 5px; width: auto;">
                                    <span style="font-size: 14px; font-weight: 400; letter-spacing: 0.03em;">Просмотрено 👁</span>
                                </div>
                            }
                            <div class="card-body">
                                <h5 class="card-title" style="font-size: 15px; font-weight: 640;">@item.Title</h5>
                                <div class="card-button-container">
                                    <button class="btn btn-outline-dark" style="width: 80%; border-color: #2b2d42; font-size: 14px;" @onclick="()=>ShowDetails(item)">Подробнее...</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <h5 style="color: gray;">Предложений пока нет</h5>
            }
        </div>
    </div>
    @*<AdvertisementDetailComponent @ref="AdvertisementDetail" MainPage="this" />*@
    <AdvertisementDetailComponent @ref="AdvertisementDetail" MainPage="this" />
</div>

