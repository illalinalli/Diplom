@using HomelessAnimalsDiplom.Views.Advertisement;
@using HomelessAnimalsDiplom.Views.Home;
@using Models;
@using static HomelessAnimalsDiplom.Models.Database;
@using MongoDB.Bson;
@using MongoDB.Driver;
@using static Controllers.HomeController;
@using static Models.ContentBasedFiltering;
@code {
    public List<Item> Items = Item.GetAllItems();
    public List<Item> RecommendationItems;
    public List<Item> MostPopularItems = new();
    public List<Item> NewestItems = new();
    public static AdvertisementDetailComponent? AdvertisementDetail = new();
    public static MainPageSettings MainPage = new();

    public ContentBasedFiltering recomSystem = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (CurUser == null || Items == null) return;
        if (CurUser.ViewingHistory == null) CurUser.ViewingHistory = new();
        var user = CurUser;
        recomSystem.items = Items;
        //RecommendationItems = recomSystem.Recommend();
        RecommendationItems = recomSystem.EuclideanDistanceRecommend();
        //var b = recomSystem.TreeProximityRecommend();

        MostPopularItems = Item.GetMostPopularItems().Where(x => !CurUser.Favorites.Any(y => y == x.Id)
                           && !RecommendationItems.Any(item => item.Id == x.Id)).ToList();
        NewestItems = Item.GetNewestItems().Where(x => !CurUser.Favorites.Any(y => y == x.Id)
                        && !RecommendationItems.Any(item => item.Id == x.Id)).ToList();
    }

    public bool IsWatchedItem(Item item)
    {
        if (CurUser.ViewingHistory == null) return false;
        if (CurUser.ViewingHistory.FirstOrDefault(x => x.ItemId == item.Id) != null) return true;
        return false;
    }

    public void Update()
    {
        StateHasChanged();
    }

    public void ShowDetails(Item item)
    {
        AdvertisementDetail?.ShowDialog(item, null, null);
    }
}
@foreach (var popItem in MostPopularItems)
{
    <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12 pt-3 pb-5">
        <div class="card card-item">
            @if (popItem.Images?.Count != 0)
            {
                <img src="@($"data:image/jpeg;base64,{Convert.ToBase64String(popItem.Images.First())}")" alt="Image" class="d-block w-100 card-img">
            }
            <div class="watched-item" style="position: absolute;top: 10px;right: 10px;background-color: #3c4246a6;opacity: 1;color: white;padding: 5px;border-radius: 5px;width: auto;">
                <span class="bi bi-fire watched-title" style=" font-size: 14px;font-weight: 400;letter-spacing: 0.03em;"> Популярно</span>
            </div>
            <div class="card-body">
                <h5 class="card-title title-card-all">@popItem.Title</h5>
                <div class="card-button-container">
                    <button class="btn btn-outline-dark btn-ad-details" @onclick="()=>ShowDetails(popItem)">Подробнее...</button>
                </div>
            </div>
        </div>
    </div>
}
@foreach (var newItem in NewestItems)
{
    <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12 pt-3 pb-5">
        <div class="card card-item">
            @if (newItem.Images?.Count != 0)
            {
                <img src="@($"data:image/jpeg;base64,{Convert.ToBase64String(newItem.Images.First())}")" alt="Image" class="d-block w-100 card-img">
            }
            <div class="watched-item" style="position: absolute;top: 10px;right: 10px;background-color: #3c4246a6;opacity: 1;color: white;padding: 5px;border-radius: 5px;width: auto;">
                <span class="watched-title" style="font-size: 14px;font-weight: 400;letter-spacing: 0.03em;">Новинка</span>
            </div>
            <div class="card-body">
                <h5 class="card-title title-card-all">@newItem.Title</h5>
                <div class="card-button-container">
                    <button class="btn btn-outline-dark btn-ad-details" @onclick="()=>ShowDetails(newItem)">Подробнее...</button>
                </div>
            </div>
        </div>
    </div>
}
@if (RecommendationItems.Count() != 0)
{
    @foreach (var item in RecommendationItems)
    {
        <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12 pt-3 pb-5">
            <div class="card card-item" style="@(IsWatchedItem(item).StrIf("opacity: 0.65;"))">
                @if (item.Images?.Count != 0)
                {
                    <img src="@($"data:image/jpeg;base64,{Convert.ToBase64String(item.Images.First())}")" alt="Image" class="d-block w-100 card-img">
                }
                @if (IsWatchedItem(item))
                {
                    <div class="watched-item" style="position: absolute;top: 10px;right: 10px;background-color: #3c4246a6;opacity: 1;color: white;padding: 5px;border-radius: 5px;width: auto;">
                        <span class="bi bi-eye watched-title" style=" font-size: 14px;font-weight: 400;letter-spacing: 0.03em;"> Просмотрено</span>
                    </div>
                }
                <div class="card-body">
                    <h5 class="card-title title-card-all">@item.Title</h5>
                    <div class="card-button-container">
                        <button class="btn btn-outline-dark btn-ad-details" @onclick="()=>ShowDetails(item)">Подробнее...</button>
                    </div>
                </div>
            </div>
            <AdvertisementDetailComponent @ref="@AdvertisementDetail" RecommendationsComp="this" />
        </div>
    }
}
@*else
{
    <h5 style="color: gray;">Предложений пока нет</h5>
}*@

                